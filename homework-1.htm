<html>  
  <head>  
        <meta charset="utf-8">  
        <title>My D3.js Homework</title>
  </head>  
    <body>  
		<script>
		   String.prototype.replaceAll = function(s1,s2){
		　　return this.replace(new RegExp(s1,"gm"),s2);
		　　}
		</script> 
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>  
		
		<script>
			
		    var mapState = {};
			var mapMonth = {};
			var mapYear = {};
			var mapNum ={};
			var mode = false;
			function getColor(i){
				var colors = ["#FFC125","#388E8E","#8E8E38","#9BCD9B","#B4EEB4"];
				return colors[i];
			}
			function drawbar(data){
				//画布大小
				var width = 400;
				var height = 400;

				//在 body 里添加一个 SVG 画布   
				var svg = d3.select("body")
					.append("svg")
					.attr("width", width)
					.attr("height", height);

				//画布周边的空白
				 var padding = {left:100, right:30, top:80, bottom:20};

				 var dataset = {x:[],y:[]};
				 for(var index in data)
				 {
				    dataset.x.push(index);
					dataset.y.push(Math.round(data[index]));
				 }
				console.log(dataset);
						
				//x轴的比例尺
				var xScale = d3.scale.ordinal()
					.domain(dataset.x)
				    .rangeRoundBands([0, width - padding.left - padding.right],0,0);
									 
				//y轴的比例尺
				var yScale = d3.scale.linear()
					.domain([0, d3.max(dataset.y)])
				    .range([height - padding.top - padding.bottom, 0]);
					
				var xAxis = d3.svg.axis()
					.scale(xScale)
					.orient("bottom");
						
				//定义y轴
				var yAxis = d3.svg.axis()
					.scale(yScale)
					.orient("left");

				//矩形之间的空白
				var rectPadding = 4;
				 
				//添加矩形元素
				var rects = svg.selectAll(".MyRect")
						.data(dataset.y)
						.enter()
						.append("rect")
						.attr("class","MyRect")
						.attr("transform","translate(" + padding.left + "," + padding.top + ")")
						.attr("x", function(d,i){
							return xScale(dataset.x[i]) + rectPadding/2;
						} )
						.attr("y",function(d){
							return yScale(d);
						})
						.attr("width", xScale.rangeBand() - rectPadding )
						.attr("height", function(d){
							return height - padding.top - padding.bottom - yScale(d);
						})
						.attr('fill', function(d, i) {
						   return getColor(i);
						})
						.on("click",function(d,i){
							d3.select("body svg").remove();
							if(mode){
							    mode = false;
								drawbar(mapMonth);
							}else{
							    mode = true;
								drawbar(mapYear);
							}
							
						})
				 
				//添加文字元素
				var texts = svg.selectAll(".MyText")
						.data(dataset)
						.enter()
						.append("text")
						.attr("class","MyText")
						.attr("transform","translate(" + padding.left + "," + padding.top + ")")
						.attr("x", function(d,i){
							return xScale(i) + rectPadding/2;
						} )
						.attr("y",function(d){
							return yScale(d);
						})
						.attr("dx",function(){
							return (xScale.rangeBand() - rectPadding)/2;
						})
						.attr("dy",function(d){
							return 20;
						})
						.text(function(d,i){
							return dataset.y[i];
						});
						

				//添加x轴
				svg.append("g")
				  .attr("class","axis")
				  .attr("transform","translate(" + padding.left + "," + (height - padding.bottom) + ")")
				  .attr('fill', "#4F94CD")
				  .call(xAxis); 
						
				//添加y轴
				svg.append("g")
				  .attr("class","axis")
				  .attr("transform","translate(" + padding.left + "," + padding.top + ")")
				  .attr('fill', "#4F94CD")
				  .call(yAxis);

				
				svg.append("g") 
				 .append("text") 
				 .text(function(d,i){
					  if(mode)
						 return "Annual Revenue"
					  else
					     return "Total BRR"
				  }) 
				 .attr("class","title") 
				 .attr("x",padding.left+100) 
				 .attr("y",padding.top-15); 

				
			}
			d3.tsv("ZayoHackathonData_Sites.csv",function(error,csvdata){  
				if(error){  
					console.log(error);  
				}  
				//console.log(csvdata);  
				for( var i=0; i<csvdata.length; i++ ){  
					var account = csvdata[i]["Account ID"].replace(/(^\s+)|(\s+$)/g, "");  
					var state = csvdata[i].State.replace(/(^\s+)|(\s+$)/g, "");  
					mapState[account]=state;
				} 
				
				//for(var index in mapState)
				//	console.log(index+"->"+mapState[index]);
				isOk = true;
				var e = 0;
			    d3.csv("ZayoHackathonData_Accounts.csv",function(error,data){  
					if(error){  
						console.log(error);  
					}  
					//console.log(csvdata);  
					for( var j=0; j<data.length; j++ ){  
						var account = data[j]["Account ID"].replace(/(^\s+)|(\s+$)/g, "");  
						var brr = data[j][" Total BRR "].replace("$","").replaceAll(",","").replace(/(^\s+)|(\s+$)/g, ""); 
						var annual = data[j][" AnnualRevenue "].replace("$","").replaceAll(",","").replace(/(^\s+)|(\s+$)/g, ""); 
						var num = data[j]["NumberOfEmployees"].replace(/(^\s+)|(\s+$)/g, ""); 
						var state = mapState[account];
						if(typeof(state)=="undefined"){
							//console.log(account);
							continue;
						}
						/*if(state=="OR"){
							console.log(brr);
							console.log(annual);
							console.log(num);
						}*/
						if(isNaN(brr)){
							brr=0;
						}
						if(isNaN(annual)){
							annual=0;
						}
						if(isNaN(num)){
							num=0;
						}
						if(state in mapMonth){
						   mapMonth[state]=parseFloat(mapMonth[state])+parseFloat(brr);
						}else{
						   mapMonth[state]=parseFloat(brr);
						}
						if(state in mapYear){
						   mapYear[state]=parseFloat(mapYear[state])+parseFloat(annual);
						}else{
						   mapYear[state]=parseFloat(annual);
						}
						if(state in mapNum){
						   mapNum[state]=parseFloat(mapNum[state])+parseFloat(num);
						}else{
						   mapNum[state]=parseFloat(num);
						}

					} 
					console.log(mapMonth); 
					console.log(mapYear); 
					console.log(mapNum); 
					for(var state in mapNum){
						if(mapNum[state]!=0){
							mapMonth[state]=parseFloat(mapMonth[state])/parseFloat(mapNum[state]);
							mapYear[state]=parseFloat(mapYear[state])/parseFloat(mapNum[state]);
						}else{
							mapMonth[state]=0;
							mapYear[state]=0;
						}
					}
					console.log(mapMonth); 
					console.log(mapYear); 
					console.log(mapNum); 
					drawbar(mapMonth);
					
				});
			});
			
			
									
        </script>  
  
    </body>  
</html>  